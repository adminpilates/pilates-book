generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SessionType {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  capacity    Int
  duration    Int
  color       String    @default("bg-blue-100 text-blue-800")
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  price       Decimal?  @db.Decimal(10, 2)
  sessions    Session[]

  @@map("session_types")
}

model Session {
  id            Int         @id @default(autoincrement())
  sessionTypeId Int         @map("session_type_id")
  date          DateTime    @db.Date
  time          String
  isActive      Boolean     @default(true)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  bookings      Booking[]
  sessionType   SessionType @relation(fields: [sessionTypeId], references: [id], onDelete: Cascade)

  @@unique([sessionTypeId, date, time])
  @@map("sessions")
}

model Booking {
  id                String          @id @default(cuid())
  sessionId         Int             @map("session_id")
  fullName          String          @map("full_name")
  email             String
  phone             String
  emergencyContact  String?         @map("emergency_contact")
  emergencyPhone    String?         @map("emergency_phone")
  medicalConditions String?         @map("medical_conditions")
  experience        ExperienceLevel @default(BEGINNER)
  specialRequests   String?         @map("special_requests")
  status            BookingStatus   @default(CONFIRMED)
  bookingDate       DateTime        @default(now()) @map("booking_date")
  cancelledAt       DateTime?       @map("cancelled_at")
  cancelReason      String?         @map("cancel_reason")
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  session           Session         @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@map("bookings")
}

enum ExperienceLevel {
  BEGINNER
  SOME
  INTERMEDIATE
  ADVANCED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  NO_SHOW
}
